name: 🚀 Deploy PHP App to VPS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: 🔑 Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: 🚀 Deploy Application
      run: |
        set -e
        echo "🔧 Configurando SSH..."
        
        # Agregar el host a known_hosts
        mkdir -p ~/.ssh
        ssh-keyscan -H 62.171.169.111 >> ~/.ssh/known_hosts
        
        echo "📤 Copiando archivos al servidor..."
        
        # Copiar APP PHP
        scp -r -o StrictHostKeyChecking=no ./app/* root@62.171.169.111:/root/appPHP/
        
        # Copiar NGINX PROXY
        scp -r -o StrictHostKeyChecking=no ./nginx-proxy/* root@62.171.169.111:/root/ngix-proxy/
        
        echo "🖥️ Ejecutando despliegue en el servidor..."
        ssh -o StrictHostKeyChecking=no root@62.171.169.111 << 'EOF'
        set -e
        
        echo "🔨 Reconstruyendo aplicación PHP..."
        cd /root/appPHP
        docker build -t mi-app-php .
        
        echo "🛑 Deteniendo contenedor antiguo..."
        docker stop aplicacion 2>/dev/null || true
        docker rm aplicacion 2>/dev/null || true
        
        echo "🐳 Iniciando nuevo contenedor PHP..."
        docker run -d --name aplicacion -p 80:80 mi-app-php
        
        echo "🔄 Actualizando Nginx Proxy..."
        cd /root/ngix-proxy
        docker-compose down 2>/dev/null || true
        docker-compose up -d --build
        
        echo "🔗 Conectando servicios..."
        docker network connect app-network aplicacion 2>/dev/null || echo "ℹ️ Red app-network no existe, se creará automáticamente"
        
        echo "⏳ Esperando que los servicios estén listos..."
        sleep 20
        
        echo "✅ Verificando despliegue..."
        docker ps
        echo "🌐 App desplegada en: https://brainsync.colibrihub.com:8443"
        EOF
        
        echo "🎉 ¡Despliegue completado!"